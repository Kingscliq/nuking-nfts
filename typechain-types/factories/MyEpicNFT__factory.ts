/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MyEpicNFT, MyEpicNFTInterface } from "../MyEpicNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061003c6040518060600160405280602c815260200161038f602c913961004160201b6100091760201c565b6101c4565b6100dd8160405160240161005591906101a2565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100e060201b60201c565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610143578082015181840152602081019050610128565b83811115610152576000848401525b50505050565b6000601f19601f8301169050919050565b600061017482610109565b61017e8185610114565b935061018e818560208601610125565b61019781610158565b840191505092915050565b600060208201905081810360008301526101bc8184610169565b905092915050565b6101bc806101d36000396000f3fe6080604052600080fd5b61009f8160405160240161001d9190610164565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100a2565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156101055780820151818401526020810190506100ea565b83811115610114576000848401525b50505050565b6000601f19601f8301169050919050565b6000610136826100cb565b61014081856100d6565b93506101508185602086016100e7565b6101598161011a565b840191505092915050565b6000602082019050818103600083015261017e818461012b565b90509291505056fea2646970667358221220d11468cb2eed92219b5d4c9bd66d1e96f382773a5363906c53b7ad9df62db08764736f6c6343000809003354686973206973206d79206669727374204e465420636f6e74726163742e2053757065722045786369746564";

type MyEpicNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyEpicNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyEpicNFT__factory extends ContractFactory {
  constructor(...args: MyEpicNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MyEpicNFT> {
    return super.deploy(overrides || {}) as Promise<MyEpicNFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MyEpicNFT {
    return super.attach(address) as MyEpicNFT;
  }
  override connect(signer: Signer): MyEpicNFT__factory {
    return super.connect(signer) as MyEpicNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyEpicNFTInterface {
    return new utils.Interface(_abi) as MyEpicNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyEpicNFT {
    return new Contract(address, _abi, signerOrProvider) as MyEpicNFT;
  }
}
